# Exit immediately if a command exits with a non-zero status.
$ErrorActionPreference = "Stop"

# Define the installation directory
$INSTALL_DIR = "$HOME\sship"
$LOCAL_BIN = "$HOME\.local\bin"
$SSHIP_EXEC = "$LOCAL_BIN\sship.ps1"

Write-Host "Starting SSHIP installation..."

# Clone the repository
if (Test-Path $INSTALL_DIR) {
  Write-Host "SSHIP directory already exists. Pulling latest changes..."
  Push-Location $INSTALL_DIR
  git pull
  Pop-Location
} else {
  Write-Host "Cloning SSHIP repository to $INSTALL_DIR..."
  git clone https://github.com/Makumiii/sship.git "$INSTALL_DIR"
}

# Create ~/.local/bin if it doesn't exist
if (-not (Test-Path $LOCAL_BIN)) {
  New-Item -ItemType Directory -Path $LOCAL_BIN | Out-Null
}

# Create symbolic link (or copy for PowerShell execution)
Write-Host "Creating symbolic link to $SSHIP_EXEC..."
# For PowerShell, it's often better to copy the script and ensure it's executable
# or create a small wrapper script.
# For simplicity, we'll copy the main.ts and create a .ps1 wrapper to run it with bun

$WRAPPER_SCRIPT_CONTENT = @"
# This is a wrapper script to run SSHIP using Bun
# It's automatically generated by the SSHIP installer

$sshipSourceDir = Join-Path $INSTALL_DIR "src"

# Ensure Bun is in PATH or specify full path to bun.exe if needed
& bun run (Join-Path $sshipSourceDir "main.ts") @args
"@

Set-Content -Path $SSHIP_EXEC -Value $WRAPPER_SCRIPT_CONTENT

Write-Host "SSHIP installed successfully!"
Write-Host "You can now run 'sship.ps1' from your terminal."
